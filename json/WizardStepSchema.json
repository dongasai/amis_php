{
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "api": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#\/definitions\/BaseApiObject"
                }
            ],
            "description": "Form 用来保存数据的 api。\n\n详情：https:\/\/aisuda.bce.baidu.com\/amis\/zh-CN\/components\/form\/index#%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4"
        },
        "asyncApi": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#\/definitions\/BaseApiObject"
                }
            ],
            "description": "设置此属性后，表单提交发送保存接口后，还会继续轮询请求该接口，直到返回 finished 属性为 true 才 结束。"
        },
        "initApi": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#\/definitions\/BaseApiObject"
                }
            ],
            "description": "用来初始化表单数据"
        },
        "jumpable": {
            "type": "boolean",
            "description": "是否可直接跳转到该步骤，一般编辑模式需要可直接跳转查看。"
        },
        "jumpableOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "通过 JS 表达式来配置当前步骤可否被直接跳转到。"
        },
        "title": {
            "type": "string",
            "description": "表单标题"
        },
        "label": {
            "type": "string"
        },
        "actions": {
            "type": "array",
            "items": {
                "$ref": "#\/definitions\/ActionSchema"
            },
            "description": "按钮集合，会固定在底部显示。"
        },
        "redirect": {
            "type": "string"
        },
        "reload": {
            "type": "string"
        },
        "target": {
            "type": "string",
            "description": "默认表单提交自己会通过发送 api 保存数据，但是也可以设定另外一个 form 的 name 值，或者另外一个 `CRUD` 模型的 name 值。 如果 target 目标是一个 `Form` ，则目标 `Form` 会重新触发 `initApi` 和 `schemaApi`，api 可以拿到当前 form 数据。如果目标是一个 `CRUD` 模型，则目标模型会重新触发搜索，参数为当前 Form 数据。"
        },
        "testid": {
            "type": "string"
        },
        "$$id": {
            "type": "string",
            "description": "组件唯一 id，主要用于页面设计器中定位 json 节点"
        },
        "className": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "容器 css 类名"
        },
        "$ref": {
            "type": "string",
            "description": "配合 definitions 一起使用，可以实现无限循环的渲染器。"
        },
        "disabled": {
            "type": "boolean",
            "description": "是否禁用"
        },
        "disabledOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否禁用表达式"
        },
        "hidden": {
            "type": "boolean",
            "description": "是否隐藏"
        },
        "hiddenOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否隐藏表达式"
        },
        "visible": {
            "type": "boolean",
            "description": "是否显示"
        },
        "visibleOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否显示表达式"
        },
        "id": {
            "type": "string",
            "description": "组件唯一 id，主要用于日志采集"
        },
        "onEvent": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "number"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/definitions\/ListenerAction"
                        }
                    },
                    "debounce": {
                        "$ref": "#\/definitions\/debounceConfig"
                    },
                    "track": {
                        "$ref": "#\/definitions\/trackConfig"
                    }
                },
                "required": [
                    "actions"
                ],
                "additionalProperties": false
            },
            "description": "事件动作配置"
        },
        "static": {
            "type": "boolean",
            "description": "展示态时的className"
        },
        "staticOn": {
            "$ref": "#\/definitions\/SchemaExpression"
        },
        "staticPlaceholder": {
            "type": "string",
            "description": "静态展示空值占位"
        },
        "staticClassName": {
            "$ref": "#\/definitions\/SchemaClassName"
        },
        "staticLabelClassName": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "静态展示表单项Label类名"
        },
        "staticInputClassName": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "静态展示表单项Value类名"
        },
        "staticSchema": {},
        "style": {
            "type": "object",
            "description": "组件样式"
        },
        "editorSetting": {
            "type": "object",
            "properties": {
                "behavior": {
                    "type": "string",
                    "description": "组件行为、用途，如 create、update、remove"
                },
                "displayName": {
                    "type": "string",
                    "description": "组件名称，通常是业务名称方便定位"
                },
                "mock": {
                    "description": "编辑器假数据，方便展示"
                }
            },
            "description": "编辑器配置，运行时可以忽略"
        },
        "useMobileUI": {
            "type": "boolean",
            "description": "可以组件级别用来关闭移动端样式"
        },
        "testIdBuilder": {
            "$ref": "#\/definitions\/TestIdBuilder"
        },
        "subTitle": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#\/definitions\/SchemaCollection"
                }
            ],
            "description": "子标题"
        },
        "icon": {
            "type": "string",
            "description": "图标"
        },
        "value": {
            "type": [
                "string",
                "number"
            ]
        },
        "description": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#\/definitions\/SchemaCollection"
                }
            ],
            "description": "描述"
        },
        "body": {
            "$ref": "#\/definitions\/SchemaCollection",
            "description": "表单项集合"
        },
        "tabs": {},
        "fieldSet": {},
        "data": {},
        "debug": {
            "type": "boolean",
            "description": "是否开启调试，开启后会在顶部实时显示表单项数据。"
        },
        "debugConfig": {
            "type": "object",
            "properties": {
                "levelExpand": {
                    "type": "number",
                    "description": "默认展开的级别"
                },
                "enableClipboard": {
                    "type": "boolean",
                    "description": "是否可复制"
                },
                "iconStyle": {
                    "type": "string",
                    "enum": [
                        "square",
                        "circle",
                        "triangle"
                    ],
                    "description": "图标风格"
                },
                "quotesOnKeys": {
                    "type": "boolean",
                    "description": "是否显示键的引号"
                },
                "sortKeys": {
                    "type": "boolean",
                    "description": "是否为键排序"
                },
                "ellipsisThreshold": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "boolean",
                            "const": false
                        }
                    ],
                    "description": "设置字符串的最大展示长度，超出长度阈值的字符串将被截断，点击value可切换字符串展示方式，默认为120"
                }
            },
            "additionalProperties": false,
            "description": "Debug面板配置"
        },
        "initAsyncApi": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#\/definitions\/BaseApiObject"
                }
            ],
            "description": "Form 用来获取初始数据的 api,与initApi不同的是，会一直轮询请求该接口，直到返回 finished 属性为 true 才 结束。"
        },
        "initFinishedField": {
            "type": "string",
            "description": "设置了initAsyncApi后，默认会从返回数据的data.finished来判断是否完成，也可以设置成其他的xxx，就会从data.xxx中获取"
        },
        "initCheckInterval": {
            "type": "number",
            "description": "设置了initAsyncApi以后，默认拉取的时间间隔"
        },
        "initFetch": {
            "type": "boolean",
            "description": "是否初始加载"
        },
        "initFetchOn": {
            "type": "string",
            "description": "建议改成 api 的 sendOn 属性。"
        },
        "interval": {
            "type": "number",
            "description": "设置后将轮询调用 initApi"
        },
        "silentPolling": {
            "type": "boolean",
            "description": "是否静默拉取"
        },
        "stopAutoRefreshWhen": {
            "type": "string",
            "description": "配置停止轮询的条件"
        },
        "persistData": {
            "type": "string",
            "description": "是否开启本地缓存"
        },
        "persistDataKeys": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "开启本地缓存后限制保存哪些 key"
        },
        "clearPersistDataAfterSubmit": {
            "type": "boolean",
            "description": "提交成功后清空本地缓存"
        },
        "feedback": {
            "description": "Form 也可以配置 feedback。"
        },
        "checkInterval": {
            "type": "number",
            "description": "轮询请求的时间间隔，默认为 3秒。设置 asyncApi 才有效"
        },
        "finishedField": {
            "type": "string",
            "description": "如果决定结束的字段名不是 `finished` 请设置此属性，比如 `is_success`"
        },
        "resetAfterSubmit": {
            "type": "boolean",
            "description": "提交完后重置表单"
        },
        "clearAfterSubmit": {
            "type": "boolean",
            "description": "提交后清空表单"
        },
        "mode": {
            "type": "string",
            "enum": [
                "normal",
                "inline",
                "horizontal",
                "flex"
            ],
            "description": "配置表单项默认的展示方式。"
        },
        "columnCount": {
            "type": "number",
            "description": "表单项显示为几列"
        },
        "horizontal": {
            "$ref": "#\/definitions\/FormHorizontal",
            "description": "如果是水平排版，这个属性可以细化水平排版的左右宽度占比。"
        },
        "autoFocus": {
            "type": "boolean",
            "description": "是否自动将第一个表单元素聚焦。"
        },
        "messages": {
            "type": "object",
            "properties": {
                "validateFailed": {
                    "type": "string",
                    "description": "表单验证失败时的提示"
                }
            },
            "additionalProperties": false,
            "description": "消息文案配置，记住这个优先级是最低的，如果你的接口返回了 msg，接口返回的优先。"
        },
        "name": {
            "type": "string"
        },
        "panelClassName": {
            "$ref": "#\/definitions\/ClassName",
            "description": "配置容器 panel className"
        },
        "primaryField": {
            "type": "string",
            "description": "设置主键 id, 当设置后，检测表单是否完成时（asyncApi），只会携带此数据。"
        },
        "submitOnChange": {
            "type": "boolean",
            "description": "修改的时候是否直接提交表单。"
        },
        "submitOnInit": {
            "type": "boolean",
            "description": "表单初始先提交一次，联动的时候有用"
        },
        "submitText": {
            "type": "string",
            "description": "默认的提交按钮名称，如果设置成空，则可以把默认按钮去掉。"
        },
        "wrapWithPanel": {
            "type": "boolean",
            "description": "是否用 panel 包裹起来"
        },
        "affixFooter": {
            "type": "boolean",
            "description": "是否固定底下的按钮在底部。"
        },
        "promptPageLeave": {
            "type": "boolean",
            "description": "页面离开提示，为了防止页面不小心跳转而导致表单没有保存。"
        },
        "promptPageLeaveMessage": {
            "type": "string",
            "description": "具体的提示信息，选填。"
        },
        "rules": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "rule": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "rule",
                    "message"
                ],
                "additionalProperties": false
            },
            "description": "组合校验规则，选填"
        },
        "preventEnterSubmit": {
            "type": "boolean",
            "description": "禁用回车提交"
        },
        "labelAlign": {
            "$ref": "#\/definitions\/LabelAlign",
            "description": "表单label的对齐方式"
        },
        "labelWidth": {
            "type": [
                "number",
                "string"
            ],
            "description": "label自定义宽度，默认单位为px"
        }
    },
    "required": [
        "title"
    ]
}