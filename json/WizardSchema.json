{
    "type": "object",
    "properties": {
        "loadingConfig": {
            "type": "object",
            "properties": {
                "root": {
                    "type": "string"
                },
                "show": {
                    "type": "boolean"
                }
            },
            "additionalProperties": false
        },
        "$$id": {
            "type": "string",
            "description": "组件唯一 id，主要用于页面设计器中定位 json 节点"
        },
        "className": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "容器 css 类名"
        },
        "$ref": {
            "type": "string",
            "description": "配合 definitions 一起使用，可以实现无限循环的渲染器。"
        },
        "disabled": {
            "type": "boolean",
            "description": "是否禁用"
        },
        "disabledOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否禁用表达式"
        },
        "hidden": {
            "type": "boolean",
            "description": "是否隐藏"
        },
        "hiddenOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否隐藏表达式"
        },
        "visible": {
            "type": "boolean",
            "description": "是否显示"
        },
        "visibleOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否显示表达式"
        },
        "id": {
            "type": "string",
            "description": "组件唯一 id，主要用于日志采集"
        },
        "onEvent": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "number"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/definitions\/ListenerAction"
                        }
                    },
                    "debounce": {
                        "$ref": "#\/definitions\/debounceConfig"
                    },
                    "track": {
                        "$ref": "#\/definitions\/trackConfig"
                    }
                },
                "required": [
                    "actions"
                ],
                "additionalProperties": false
            },
            "description": "事件动作配置"
        },
        "static": {
            "type": "boolean",
            "description": "是否静态展示"
        },
        "staticOn": {
            "$ref": "#\/definitions\/SchemaExpression",
            "description": "是否静态展示表达式"
        },
        "staticPlaceholder": {
            "type": "string",
            "description": "静态展示空值占位"
        },
        "staticClassName": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "静态展示表单项类名"
        },
        "staticLabelClassName": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "静态展示表单项Label类名"
        },
        "staticInputClassName": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "静态展示表单项Value类名"
        },
        "staticSchema": {},
        "style": {
            "type": "object",
            "description": "组件样式"
        },
        "editorSetting": {
            "type": "object",
            "properties": {
                "behavior": {
                    "type": "string",
                    "description": "组件行为、用途，如 create、update、remove"
                },
                "displayName": {
                    "type": "string",
                    "description": "组件名称，通常是业务名称方便定位"
                },
                "mock": {
                    "description": "编辑器假数据，方便展示"
                }
            },
            "description": "编辑器配置，运行时可以忽略"
        },
        "useMobileUI": {
            "type": "boolean",
            "description": "可以组件级别用来关闭移动端样式"
        },
        "testIdBuilder": {
            "$ref": "#\/definitions\/TestIdBuilder"
        },
        "type": {
            "type": "string",
            "const": "wizard",
            "description": "指定为表单向导"
        },
        "testid": {
            "type": "string"
        },
        "actionClassName": {
            "$ref": "#\/definitions\/SchemaClassName",
            "description": "配置按钮 className"
        },
        "actionFinishLabel": {
            "type": "string",
            "description": "完成按钮的文字描述"
        },
        "actionNextLabel": {
            "type": "string",
            "description": "下一步按钮的文字描述"
        },
        "actionNextSaveLabel": {
            "type": "string",
            "description": "下一步并且保存按钮的文字描述"
        },
        "actionPrevLabel": {
            "type": "string",
            "description": "上一步按钮的文字描述"
        },
        "api": {
            "$ref": "#\/definitions\/SchemaApi",
            "description": "Wizard 用来保存数据的 api。 [详情](https:\/\/baidu.github.io\/amis\/docs\/api#wizard)"
        },
        "bulkSubmit": {
            "type": "boolean",
            "description": "是否合并后再提交"
        },
        "initApi": {
            "$ref": "#\/definitions\/SchemaApi",
            "description": "Wizard 用来获取初始数据的 api。"
        },
        "mode": {
            "type": "string",
            "enum": [
                "vertical",
                "horizontal"
            ],
            "description": "展示模式"
        },
        "name": {
            "$ref": "#\/definitions\/SchemaName"
        },
        "readOnly": {
            "type": "boolean",
            "description": "是否为只读模式。"
        },
        "redirect": {
            "type": "string",
            "description": "保存完后，可以指定跳转地址，支持相对路径和组内绝对路径，同时可以通过 $xxx 使用变量"
        },
        "reload": {
            "$ref": "#\/definitions\/SchemaReload"
        },
        "target": {
            "type": "string",
            "description": "默认表单提交自己会通过发送 api 保存数据，但是也可以设定另外一个 form 的 name 值，或者另外一个 `CRUD` 模型的 name 值。 如果 target 目标是一个 `Form` ，则目标 `Form` 会重新触发 `initApi` 和 `schemaApi`，api 可以拿到当前 form 数据。如果目标是一个 `CRUD` 模型，则目标模型会重新触发搜索，参数为当前 Form 数据。"
        },
        "affixFooter": {
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "string",
                    "const": "always"
                }
            ],
            "description": "是否将底部按钮固定在底部。"
        },
        "steps": {
            "type": "array",
            "items": {
                "$ref": "#\/definitions\/WizardStepSchema"
            }
        },
        "startStep": {
            "type": "string"
        },
        "stepsClassName": {
            "type": "string",
            "description": "步骤条区域css类"
        },
        "bodyClassName": {
            "type": "string",
            "description": "表单区域css类"
        },
        "stepClassName": {
            "type": "string",
            "description": "step + body区域css类"
        },
        "footerClassName": {
            "type": "string",
            "description": "底部操作栏的css类"
        },
        "wrapWithPanel": {
            "type": "boolean",
            "description": "是否用panel包裹"
        }
    },
    "required": [
        "steps",
        "type"
    ],
    "additionalProperties": false,
    "description": "表单向导 文档：https:\/\/aisuda.bce.baidu.com\/amis\/zh-CN\/components\/wizard"
}